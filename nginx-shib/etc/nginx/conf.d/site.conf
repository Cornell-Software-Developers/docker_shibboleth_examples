# https://github.com/nginx-shib/nginx-http-shibboleth
server {
  listen 80;
#  listen       443 ssl;
  server_name  dev.local; # TODO: this is where you set your hostname
  access_log /dev/stdout main;
  error_log stderr debug;

  root /app/web;
  index index.php;

  # we aren't using ssl here, but behind a LB
#  ssl_certificate /etc/nginx/certs/keyfile.crt;
#  ssl_certificate_key /etc/nginx/certs/keyfile.key;

  location = /shibauthorizer {
    internal;
    include fastcgi_params;
    fastcgi_param REQUEST_SCHEME https;
    fastcgi_pass shib-sp3:9001;
    #fastcgi_pass unix:/opt/shibboleth/shibauthorizer.sock;
  }
  location /Shibboleth.sso {

    fastcgi_param  QUERY_STRING       $query_string;
    fastcgi_param  REQUEST_METHOD     $request_method;
    fastcgi_param  CONTENT_TYPE       $content_type;
    fastcgi_param  CONTENT_LENGTH     $content_length;

    fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
    fastcgi_param  REQUEST_URI        $request_uri;
    fastcgi_param  DOCUMENT_URI       $document_uri;
    fastcgi_param  DOCUMENT_ROOT      $document_root;
    fastcgi_param  SERVER_PROTOCOL    $server_protocol;
    # When using non-https nginx behind ssl terminator, must lie.
    fastcgi_param  REQUEST_SCHEME     HTTPS;
    fastcgi_param  HTTPS              on;
    fastcgi_param  SERVER_PORT        443;
    # When using nginx with an ssl cert, no need to lie, but you still can.
    # When using http only, don't lie.
    # fastcgi_param  REQUEST_SCHEME     $scheme;
    # fastcgi_param  SERVER_PORT        $server_port;
    # fastcgi_param  HTTPS              $https if_not_empty;

    fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
    fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;
    fastcgi_param  REMOTE_ADDR        $remote_addr;
    fastcgi_param  REMOTE_PORT        $remote_port;
    fastcgi_param  SERVER_ADDR        $server_addr;
    fastcgi_param  SERVER_NAME        $server_name;
    fastcgi_param  REDIRECT_STATUS    200;

    fastcgi_pass shib-sp3:9002;
    # fastcgi_pass unix:/opt/shibboleth/shibresponder.sock;
  }
  location /shibboleth-sp {
    alias /etc/shibboleth/;
  }



   # deny access to .htaccess files, if Apache's document root
   # concurs with nginx's one
   #
  location ~ /\.ht {
      deny  all;
  }

  location / {

    include shib_clear_headers;
    shib_request /shibauthorizer;
    include shib_fastcgi_params;
    shib_request_set $shib_remote_user $upstream_http_variable_uid;    # For optional groups attribute
    shib_request_set $shib_remote_groups $upstream_http_variable_groups;
    # shib_request_set $remote_user $upstream_http_variable_uid;    # For optional groups attribute
    try_files $uri /index.php?$query_string;
  }
    location @rewrite {
        #rewrite ^/(.*)$ /index.php?q=$1; # For Drupal <= 6
        rewrite ^ /index.php; # For Drupal >= 7
    }
    # Stolen from a drupaal config.
location ~ '\.php$|^/update.php' {

    include shib_clear_headers;
    shib_request /shibauthorizer;
    include shib_fastcgi_params;
    shib_request_set $shib_remote_user $upstream_http_variable_uid;    # For optional groups attribute
    shib_request_set $shib_remote_groups $upstream_http_variable_groups;
    shib_request_use_headers on;
    fastcgi_param REMOTE_USER $shib_remote_user;
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Ensure the php file exists. Mitigates CVE-2019-11043
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;
    fastcgi_pass   app:9000; # changes based on your app name; we use docker links for this.
    }
}
